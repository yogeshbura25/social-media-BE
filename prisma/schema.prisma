generator client {
  provider    = "prisma-client-js"
  errorFormat = "pretty"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                   Int         @id @default(autoincrement())
  email                String      @unique
  password             String
  otp                  String?
  otpExpiresAt         DateTime?
  verified             Boolean     @default(false)
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  resetPasswordExpires DateTime?
  resetPasswordToken   String?
  likes                Likes[]
  stories              Stories[]
  bio                  user_Bio?
  post                 user_Post[]
}

model user_Bio {
  username     String    @unique
  bio          String?
  gender       String?
  country      String?
  userId       Int       @unique
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  id           Int       @id @default(autoincrement())
  photoPath    String?
  profilePhoto String?
  DOB          DateTime?
  user         user      @relation(fields: [userId], references: [id])
}

model user_Post {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  description String?
  userId      Int
  files       File[]
  likes       Likes[]
  tags        Tags[]
  user        user     @relation(fields: [userId], references: [id])
}

model File {
  id        Int       @id @default(autoincrement())
  post      String?
  postPath  String?
  postId    Int
  user_Post user_Post @relation(fields: [postId], references: [id], onDelete: Cascade)
}

model Likes {
  id        Int       @id @default(autoincrement())
  userId    Int
  postId    Int
  user_Post user_Post @relation(fields: [postId], references: [id])
  user      user      @relation(fields: [userId], references: [id])

  @@unique([userId, postId])
}

model Tags {
  id        Int       @id @default(autoincrement())
  tags      String?
  postId    Int
  user_Post user_Post @relation(fields: [postId], references: [id])
}

model Stories {
  id           Int       @id @default(autoincrement())
  text         String?
  image        String?
  imagePath     String?
  story_expire DateTime?
  userId       Int      
  user         user      @relation(fields: [userId], references: [id])
}
